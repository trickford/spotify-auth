{"version":3,"sources":["logo.svg","App.js","SpotifyLogin.js","reportWebVitals.js","index.js"],"names":["App","React","useState","Cookies","get","token","setToken","userData","setUserData","console","log","axios","create","timeout","headers","then","response","data","catch","error","className","Provider","value","type","id","href","email","redirectUri","clientID","scopes","Scopes","userReadPrivate","onAccessToken","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","SpotifyLogin","document","getElementById"],"mappings":"kNAAe,I,YCwBAA,I,kECsCAA,EAtDH,WAAO,IAAD,EACUC,IAAMC,SAASC,IAAQC,IAAI,qBADrC,mBACTC,EADS,KACFC,EADE,OAEgBL,IAAMC,SAAS,IAF/B,mBAETK,EAFS,KAECC,EAFD,KA+BhB,OAJGH,IAtBDI,QAAQC,IAAI,qBAAsBL,GAEjBM,IAAMC,OAAO,CAC5BC,QAAS,IACTC,QAAS,CAAE,cAAgB,UAAhB,OAA2BT,MAIrCD,IAAI,iCACJW,MAAK,SAAUC,GAEdP,QAAQC,IAAIM,GACZR,EAAYQ,EAASC,SAEtBC,OAAM,SAAUC,GAEfV,QAAQC,IAAIS,MAEbJ,MAAK,gBASR,qBAAKK,UAAU,MAAf,SACGf,EACC,eAAC,IAAkBgB,SAAnB,CAA4BC,MAAOjB,EAAnC,UAEE,gEAAmCA,KACnC,4CAAeE,EAASgB,QACxB,0CAAahB,EAASiB,MACtB,2CAAcjB,EAASkB,QACvB,6CAAgBlB,EAASmB,YAI3B,cAAC,IAAD,CACEC,YAAY,iCACZC,SAAS,mCACTC,OAAQ,CAACC,IAAOC,gBAAiB,mBACjCC,cAAe,SAAC3B,GAAD,OAAWC,EAASD,SC5C9B4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.720d3d05.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport { SpotifyApiContext } from \"react-spotify-api\";\nimport Cookies from \"js-cookie\";\n\nimport { SpotifyAuth, Scopes } from \"react-spotify-auth\";\nimport \"react-spotify-auth/dist/index.css\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [token, setToken] = React.useState(Cookies.get(\"spotifyAuthToken\"));\n  const [userData, setUserData] = React.useState({});\n\n  const getUserData = () => {\n    console.log(\"getting user data:\", token);\n\n    const instance = axios.create({\n      timeout: 1000,\n      headers: { 'Authorization': `Bearer ${token}` },\n    });\n    // Make a request for a user with a given ID\n    instance\n      .get(\"https://api.spotify.com/v1/me\")\n      .then(function (response) {\n        // handle success\n        console.log(response);\n        setUserData(response.data);\n      })\n      .catch(function (error) {\n        // handle error\n        console.log(error);\n      })\n      .then(function () {\n        // always executed\n      });\n  };\n  if(token) {\n      getUserData();\n  }\n\n  return (\n    <div className=\"app\">\n      {token ? (\n        <SpotifyApiContext.Provider value={token}>\n          {/* Your Spotify Code here */}\n          <p>You are authorized with token: {token}</p>\n          <p>User type: {userData.type}</p>\n          <p>User id: {userData.id}</p>\n          <p>User url: {userData.href}</p>\n          <p>User email: {userData.email}</p>\n        </SpotifyApiContext.Provider>\n      ) : (\n        // Display the login page\n        <SpotifyAuth\n          redirectUri=\"http://localhost:3000/callback\"\n          clientID=\"5b04f1e10c3a414799232a16932dba47\"\n          scopes={[Scopes.userReadPrivate, \"user-read-email\"]} // either style will work\n          onAccessToken={(token) => setToken(token)}\n        />\n      )}\n    </div>\n  );\n};\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport SpotifyLogin from './SpotifyLogin';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SpotifyLogin />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}